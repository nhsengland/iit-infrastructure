---
# This playbook installs publishomatic
- name: update apt-cache
  sudo: true
  apt: update_cache=yes

- name: install packages for repos
  apt: pkg={{ item }} state=installed
  sudo: yes
  with_items:
    - git
    - libxml2
    - libxml2-dev
    - libxslt1.1
    - libxslt1-dev
    - openssl
    - libssl-dev
    - python-dev
    - python-pip
    - python-virtualenv

# Create logging folder and lograte entry
- name: Creates logging directory
  file: path=/var/log/publishomatic state=directory owner=ubuntu
  sudo: yes

# Creates logrotate file from config ...
- name: Create our config file for scraping
  template: src=config/publishomatic.logrotate.conf dest=/etc/logrotate.d/publishomatic
  sudo: yes

- name: Install required Python packages.
  easy_install: name={{ item }}
  sudo: yes
  with_items:
    - pip
    - virtualenv

- pip: name='git+{{ git_protocol }}{{ git_repos_publishomatic }}#egg=publishomatic' virtualenv=/home/ubuntu/publishomatic

- name: Create our config file for scraping
  template: src=config/publishomatic.config.ini dest=/home/ubuntu/publishomatic/config.ini

- name: Tell dc where to find ckan
  template: src=config/dc.ini dest=/home/ubuntu/.dc.ini

- name: Tell dmswitch where to send results
  template: src=config/dms.ini dest=/home/ubuntu/dms.ini


- shell: whoami && bin/crontool | crontab
  sudo_user: ubuntu
  args:
    chdir: /home/ubuntu/publishomatic/

# TODO: Setup
#
# 1. Logging
#
