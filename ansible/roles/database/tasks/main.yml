---
# This playbook installs and (re)configures Postgres

- name: install Postgres, its headers, and psycopg2
  become: true
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - postgresql
    - postgresql-server-dev-12
    - postgresql-contrib
    - libpq-dev
    - python-dev

- name: Download pip installer
  get_url:
    url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
    dest: /tmp/get-pip.py
    mode: 0440
  vars:
    ansible_ssh_pipelining: true

- name: Install pip
  become: true
  become_user: postgres
  command: /usr/bin/python2 /tmp/get-pip.py
  args:
    creates: /usr/local/bin/pip
  vars:
    ansible_ssh_pipelining: true

- name: install psycopg2 from the binary
  become: true
  become_user: postgres
  pip:
    executable: /usr/local/bin/pip
    name: psycopg2-binary
  vars:
    ansible_ssh_pipelining: true

- name: add ckan_default database user
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB

- name: create ckan_default database
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_db:
    name: "{{ db_name }}"
    encoding: 'UTF-8'
    owner: "{{ db_user }}"
    template: template0

- name: create DataStore database
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_db:
    name: "{{ datastore_db }}"
    owner: "{{ db_user }}"

- name: set DataStore database owner
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_user:
    db: "{{ datastore_db }}"
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    priv: ALL

- name: create DataStore database user
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  postgresql_user:
    name: "{{ datastore_db_user }}"
    password: "{{ datastore_db_password }}"
